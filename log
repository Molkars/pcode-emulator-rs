loading section: .fini
loading section: .plt
loading section: .text
loading section: .init
loading section: __libc_freeres_fn
done loading sections
loading function: 80497A0
loaded function: main at 080497A0 with 50 bytes
emulating main at 080497A0 with 50 bytes
  wrote [0, 0, 0, 0] to EBP
  wrote [0, 0, 10, 0] to ESP
  wrote [A0, 97, 4, 8] to EIP
-=- Emulating -=-
emulating 080497A0.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, 0, 10, 0] from ESP
  wrote [FC, FF, F, 0] to ESP

emulating 080497A0.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:9780+4
  wrote [0, 0, 0, 0] to ram:FFFFC+4

emulating 080497A1.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FF, F, 0] from ESP
  wrote [FC, FF, F, 0] to EBP

emulating 080497A3.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, 0, 0, 0] from EBX
  wrote [0, 0, 0, 0] to unique:9780+4

emulating 080497A3.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FF, F, 0] from ESP
  wrote [F8, FF, F, 0] to ESP

emulating 080497A3.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:9780+4
  wrote [0, 0, 0, 0] to ram:FFFF8+4

emulating 080497A4.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FF, F, 0] from ESP
  wrote [0] to CF

emulating 080497A4.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FF, F, 0] from ESP
  wrote [1] to OF

emulating 080497A4.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FF, F, 0] from ESP
  wrote [E4, FF, F, 0] to ESP

emulating 080497A4.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 080497A4.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 080497A4.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FF, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 080497A4.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 080497A4.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 080497A4.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 080497A7.01 IntSub - (CALL) 0x80497ac
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FF, F, 0] from ESP
  wrote [E0, FF, F, 0] to ESP

emulating 080497A7.02 Store - (CALL) 0x80497ac
  Store : const:258039EAF20+8, ESP, const:80497AC+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FF, F, 0] from ESP
  wrote [AC, 97, 4, 8] to ram:FFFE0+4

emulating 080497A7.00 Branch - (CALL) 0x80497ac
  Branch : ram:80497AC+4 -> !
  branch to 80497AC

emulating 080497AC.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FF, F, 0] from ESP
  read [AC, 97, 4, 8] from ram:FFFE0+4
  wrote [AC, 97, 4, 8] to EBX

emulating 080497AC.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FF, F, 0] from ESP
  wrote [E4, FF, F, 0] to ESP

emulating 080497AD.01 IntCarry - (ADD) EBX,0xa5854
  IntCarry : EBX, const:A5854+4 -> CF
  read [AC, 97, 4, 8] from EBX
  wrote [1] to CF

emulating 080497AD.02 IntSCarry - (ADD) EBX,0xa5854
  IntSCarry : EBX, const:A5854+4 -> OF
  read [AC, 97, 4, 8] from EBX
  wrote [1] to OF

emulating 080497AD.03 IntAdd - (ADD) EBX,0xa5854
  IntAdd : EBX, const:A5854+4 -> EBX
  read [AC, 97, 4, 8] from EBX
  wrote [0, F0, E, 8] to EBX

emulating 080497AD.04 IntSLess - (ADD) EBX,0xa5854
  IntSLess : EBX, const:0+4 -> SF
  read [0, F0, E, 8] from EBX
  wrote [0] to SF

emulating 080497AD.05 IntEqual - (ADD) EBX,0xa5854
  IntEqual : EBX, const:0+4 -> ZF
  read [0, F0, E, 8] from EBX
  wrote [0] to ZF

emulating 080497AD.06 IntAnd - (ADD) EBX,0xa5854
  IntAnd : EBX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EBX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 080497AD.07 PopCount - (ADD) EBX,0xa5854
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 080497AD.08 IntAnd - (ADD) EBX,0xa5854
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 080497AD.00 IntEqual - (ADD) EBX,0xa5854
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 080497B3.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x0
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FF, F, 0] from EBP
  wrote [F4, FF, F, 0] to unique:1D00+4

emulating 080497B3.02 Copy - (MOV) dword ptr [EBP + -0x8],0x0
  Copy : const:0+4 -> unique:7A00+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 080497B3.00 Store - (MOV) dword ptr [EBP + -0x8],0x0
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to ram:FFFF4+4

emulating 080497BA.01 Copy - (MOV) dword ptr [ESP],0xa
  Copy : const:A+4 -> unique:7A00+4
  wrote [A, 0, 0, 0] to unique:7A00+4

emulating 080497BA.00 Store - (MOV) dword ptr [ESP],0xa
  Store : const:258039EAF20+8, ESP, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from ESP
  read [A, 0, 0, 0] from unique:7A00+4
  wrote [A, 0, 0, 0] to ram:FFFE4+4

emulating 080497C1.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FF, F, 0] from ESP
  wrote [E0, FF, F, 0] to ESP

emulating 080497C1.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:80497C6+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FF, F, 0] from ESP
  wrote [C6, 97, 4, 8] to ram:FFFE0+4

emulating 080497C1.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FF, F, 0] from EBP
  wrote [FC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FF, F, 0] from ESP
  wrote [DC, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FF, F, 0] from ESP
  read [FC, FF, F, 0] from unique:9780+4
  wrote [FC, FF, F, 0] to ram:FFFDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FF, F, 0] from ESP
  wrote [DC, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FF, F, 0] from ESP
  wrote [D8, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFFD8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FF, F, 0] from ESP
  wrote [C4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FF, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FF, F, 0] from ESP
  wrote [C0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFFC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFFC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FF, F, 0] from ESP
  wrote [C4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [D0, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFFD0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [E4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from unique:1D00+4
  read [A, 0, 0, 0] from ram:FFFE4+4
  wrote [A, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [A, 0, 0, 0] from unique:7980+4
  wrote [A, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [E4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from unique:1D00+4
  read [A, 0, 0, 0] from ram:FFFE4+4
  wrote [A, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [A, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from unique:1D00+4
  read [A, 0, 0, 0] from ram:FFFE4+4
  wrote [A, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [A, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from unique:1D00+4
  read [A, 0, 0, 0] from ram:FFFE4+4
  wrote [A, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [A, 0, 0, 0] from unique:7A00+4
  wrote [8, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [8, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [8, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from unique:1E080+4
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [D0, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFFD0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [E4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from unique:1D00+4
  read [A, 0, 0, 0] from ram:FFFE4+4
  wrote [A, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [A, 0, 0, 0] from unique:7980+4
  wrote [A, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [A, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [A, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [A, 0, 0, 0] from EAX
  wrote [9, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [9, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [9, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [9, 0, 0, 0] from EAX
  wrote [9, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [9, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [9, 0, 0, 0] from EAX
  wrote [9, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from ESP
  read [9, 0, 0, 0] from unique:7980+4
  wrote [9, 0, 0, 0] to ram:FFFC4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FF, F, 0] from ESP
  wrote [C0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFFC0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [DC, FF, F, 0] from EBP
  wrote [DC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [C0, FF, F, 0] from ESP
  wrote [BC, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FF, F, 0] from ESP
  read [DC, FF, F, 0] from unique:9780+4
  wrote [DC, FF, F, 0] to ram:FFFBC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [BC, FF, F, 0] from ESP
  wrote [BC, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [BC, FF, F, 0] from ESP
  wrote [B8, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFFB8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [B8, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [B8, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [B8, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [A4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [A4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [A4, FF, F, 0] from ESP
  wrote [A4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [A4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFFA0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFFA0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B0, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFFB0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [9, 0, 0, 0] from ram:FFFC4+4
  wrote [9, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [9, 0, 0, 0] from unique:7980+4
  wrote [9, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [9, 0, 0, 0] from ram:FFFC4+4
  wrote [9, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [9, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [9, 0, 0, 0] from ram:FFFC4+4
  wrote [9, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [9, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [9, 0, 0, 0] from ram:FFFC4+4
  wrote [9, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [9, 0, 0, 0] from unique:7A00+4
  wrote [7, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [7, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [7, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [7, 0, 0, 0] from unique:1E080+4
  wrote [7, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [7, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B0, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFFB0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [9, 0, 0, 0] from ram:FFFC4+4
  wrote [9, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [9, 0, 0, 0] from unique:7980+4
  wrote [9, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [9, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [9, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [9, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from ESP
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFFA4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFFA0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [BC, FF, F, 0] from EBP
  wrote [BC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from unique:9780+4
  wrote [BC, FF, F, 0] to ram:FFF9C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [9C, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF98+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [98, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [98, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [84, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [84, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [84, FF, F, 0] from ESP
  wrote [84, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [84, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF80+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF80+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF90+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFA4+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFA4+4
  wrote [8, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [8, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFA4+4
  wrote [8, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [8, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFA4+4
  wrote [8, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [8, 0, 0, 0] from unique:7A00+4
  wrote [6, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [6, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [6, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from unique:1E080+4
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFA4+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [8, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [8, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [8, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [7, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [7, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [7, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [7, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [7, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to ram:FFF84+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF80+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFF84+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFF84+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFF84+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFF84+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [5, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFF84+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [7, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [7, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [7, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [6, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [6, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF64+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF64+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF64+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF64+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [4, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF64+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF44+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF44+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF44+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF44+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF44+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF24+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF24+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF24+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF24+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF24+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF04+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF04+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF04+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF04+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF04+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEE4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEE4+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEE4+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEE4+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFED0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEE4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEC4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEC0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [DC, FE, F, 0] from EBP
  wrote [DC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [BC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FE, F, 0] from ESP
  read [DC, FE, F, 0] from unique:9780+4
  wrote [DC, FE, F, 0] to ram:FFEBC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [BC, FE, F, 0] from ESP
  wrote [BC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [BC, FE, F, 0] from ESP
  wrote [B8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEB8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [B8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [B8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [B8, FE, F, 0] from ESP
  wrote [A4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [A4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [A4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [A4, FE, F, 0] from ESP
  wrote [A4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [A4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FE, F, 0] from ESP
  wrote [A0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEA0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEA0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FE, F, 0] from ESP
  wrote [A4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [B0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEB0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [C4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEC4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [C4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEC4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEC4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEC4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [B4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEB4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [B4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEB4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [A4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [A4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [A4, FE, F, 0] from ESP
  wrote [B8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [B8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [B8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [B8, FE, F, 0] from ESP
  wrote [B8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [B8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEB8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [B8, FE, F, 0] from ESP
  wrote [BC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FE, F, 0] from ESP
  read [DC, FE, F, 0] from ram:FFEBC+4
  wrote [DC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [BC, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEC0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFED0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [CC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [CC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFECC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEE4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEC4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEC0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [DC, FE, F, 0] from EBP
  wrote [DC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [BC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FE, F, 0] from ESP
  read [DC, FE, F, 0] from unique:9780+4
  wrote [DC, FE, F, 0] to ram:FFEBC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [BC, FE, F, 0] from ESP
  wrote [BC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [BC, FE, F, 0] from ESP
  wrote [B8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEB8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [B8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [B8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [B8, FE, F, 0] from ESP
  wrote [A4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [A4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [A4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [A4, FE, F, 0] from ESP
  wrote [A4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [A4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FE, F, 0] from ESP
  wrote [A0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEA0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEA0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FE, F, 0] from ESP
  wrote [A4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [B0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEB0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [C4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEC4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [C4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEC4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEC4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEC4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [B4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEB4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FE, F, 0] from EBP
  wrote [B4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEB4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [A4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [A4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [A4, FE, F, 0] from ESP
  wrote [B8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [B8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [B8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [B8, FE, F, 0] from ESP
  wrote [B8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [B8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEB8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [B8, FE, F, 0] from ESP
  wrote [BC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FE, F, 0] from ESP
  read [DC, FE, F, 0] from ram:FFEBC+4
  wrote [DC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [BC, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEC0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [CC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [CC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFECC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFED4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFED4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF04+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEEC+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFEF4+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF24+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF0C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF14+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF44+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF0C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF14+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF2C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF34+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF64+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF0C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF14+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF2C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF34+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF4C+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [D, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [D, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [D, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF54+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFF84+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [7, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [7, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [7, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF0C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF14+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF2C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF34+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF4C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF54+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF6C+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [15, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [15, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [15, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [15, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from ram:FFF74+4
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF80+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to ram:FFF8C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFA4+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [8, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [8, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [8, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [6, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [6, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to ram:FFF84+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF80+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [4, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF0C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF14+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF2C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF34+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF4C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF54+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF4C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF54+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF6C+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [D, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [D, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [D, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF74+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF80+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from ram:FFF8C+4
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [15, 0, 0, 0] from EAX
  read [D, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [15, 0, 0, 0] from EAX
  read [D, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [15, 0, 0, 0] from EAX
  read [D, 0, 0, 0] from ECX
  wrote [22, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [22, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [22, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [22, 0, 0, 0] from EAX
  wrote [22, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [22, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [22, 0, 0, 0] from EAX
  wrote [22, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [22, 0, 0, 0] from unique:7980+4
  wrote [22, 0, 0, 0] to ram:FFF94+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [22, 0, 0, 0] from ram:FFF94+4
  wrote [22, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [22, 0, 0, 0] from unique:7980+4
  wrote [22, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [84, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [84, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [98, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [98, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [98, FF, F, 0] from ESP
  wrote [98, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [98, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF98+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from ram:FFF9C+4
  wrote [BC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFFA0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B0, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFFB0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [AC, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [22, 0, 0, 0] from EAX
  wrote [22, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [AC, FF, F, 0] from unique:1D00+4
  read [22, 0, 0, 0] from unique:7980+4
  wrote [22, 0, 0, 0] to ram:FFFAC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [9, 0, 0, 0] from ram:FFFC4+4
  wrote [9, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [9, 0, 0, 0] from unique:7980+4
  wrote [9, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [9, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [9, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [9, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [7, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [7, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [7, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [7, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [7, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from ESP
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to ram:FFFA4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFFA0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [BC, FF, F, 0] from EBP
  wrote [BC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from unique:9780+4
  wrote [BC, FF, F, 0] to ram:FFF9C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [9C, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF98+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [98, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [98, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [84, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [84, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [84, FF, F, 0] from ESP
  wrote [84, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [84, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF80+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF80+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF90+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [5, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [7, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [7, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [7, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [6, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [6, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to ram:FFF84+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF80+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [4, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF0C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF14+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF2C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF34+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF4C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF54+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF4C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF54+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF6C+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [D, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [D, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [D, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF74+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF80+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF8C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [7, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [7, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [7, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF84+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF80+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF4C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF54+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF34+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF34+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF4C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF54+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF6C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF74+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF80+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF8C+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [15, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [15, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [15, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [15, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to ram:FFF94+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from ram:FFF94+4
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [84, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [84, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [98, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [98, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [98, FF, F, 0] from ESP
  wrote [98, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [98, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF98+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from ram:FFF9C+4
  wrote [BC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFFA0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [AC, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [AC, FF, F, 0] from unique:1D00+4
  read [22, 0, 0, 0] from ram:FFFAC+4
  wrote [22, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [22, 0, 0, 0] from unique:7980+4
  wrote [22, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [22, 0, 0, 0] from EAX
  read [15, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [22, 0, 0, 0] from EAX
  read [15, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [22, 0, 0, 0] from EAX
  read [15, 0, 0, 0] from ECX
  wrote [37, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [37, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [37, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [37, 0, 0, 0] from EAX
  wrote [37, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [37, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B4, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [37, 0, 0, 0] from EAX
  wrote [37, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FF, F, 0] from unique:1D00+4
  read [37, 0, 0, 0] from unique:7980+4
  wrote [37, 0, 0, 0] to ram:FFFB4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B4, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FF, F, 0] from unique:1D00+4
  read [37, 0, 0, 0] from ram:FFFB4+4
  wrote [37, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [37, 0, 0, 0] from unique:7980+4
  wrote [37, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [A4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [A4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [B8, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [B8, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [B8, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [B8, FF, F, 0] from ESP
  wrote [B8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [B8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFFB8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [B8, FF, F, 0] from ESP
  wrote [BC, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FF, F, 0] from ESP
  read [DC, FF, F, 0] from ram:FFFBC+4
  wrote [DC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [BC, FF, F, 0] from ESP
  wrote [C0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFFC0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FF, F, 0] from ESP
  wrote [C4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [D0, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFFD0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [CC, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [37, 0, 0, 0] from EAX
  wrote [37, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [CC, FF, F, 0] from unique:1D00+4
  read [37, 0, 0, 0] from unique:7980+4
  wrote [37, 0, 0, 0] to ram:FFFCC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [E4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FF, F, 0] from unique:1D00+4
  read [A, 0, 0, 0] from ram:FFFE4+4
  wrote [A, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [A, 0, 0, 0] from unique:7980+4
  wrote [A, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [A, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [A, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [A, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from ESP
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFFC4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FF, F, 0] from ESP
  wrote [C0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFFC0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [DC, FF, F, 0] from EBP
  wrote [DC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [C0, FF, F, 0] from ESP
  wrote [BC, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FF, F, 0] from ESP
  read [DC, FF, F, 0] from unique:9780+4
  wrote [DC, FF, F, 0] to ram:FFFBC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [BC, FF, F, 0] from ESP
  wrote [BC, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [BC, FF, F, 0] from ESP
  wrote [B8, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFFB8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [B8, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [B8, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [B8, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [A4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [A4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [A4, FF, F, 0] from ESP
  wrote [A4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [A4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFFA0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFFA0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B0, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFFB0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFC4+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFC4+4
  wrote [8, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [8, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFC4+4
  wrote [8, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [8, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFC4+4
  wrote [8, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [8, 0, 0, 0] from unique:7A00+4
  wrote [6, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [6, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [6, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from unique:1E080+4
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B0, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFFB0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFC4+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [8, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [8, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [8, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [7, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [7, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [7, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [7, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [7, 0, 0, 0] from EAX
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from ESP
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to ram:FFFA4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFFA0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [BC, FF, F, 0] from EBP
  wrote [BC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from unique:9780+4
  wrote [BC, FF, F, 0] to ram:FFF9C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [9C, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF98+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [98, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [98, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [84, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [84, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [84, FF, F, 0] from ESP
  wrote [84, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [84, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF80+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF80+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF90+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [7, 0, 0, 0] from unique:7A00+4
  wrote [5, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from unique:1E080+4
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [7, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [7, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [7, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [6, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [6, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to ram:FFF84+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF80+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [4, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEE4+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFEE0+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEE4+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFEE0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFEF0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFEEC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF04+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFEE4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFEE0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [FC, FE, F, 0] from EBP
  wrote [FC, FE, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from unique:9780+4
  wrote [FC, FE, F, 0] to ram:FFEDC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [DC, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFED8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [D8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [D8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [C4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [C4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [C4, FE, F, 0] from ESP
  wrote [C4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [C4, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [C0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEC0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEC0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FE, F, 0] from ESP
  wrote [C4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFED0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [E4, FE, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [E4, FE, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFEE4+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFED4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FE, F, 0] from EBP
  wrote [D4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFED4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FE, F, 0] from ESP
  wrote [D8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FE, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFED8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FE, F, 0] from ESP
  wrote [DC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FE, F, 0] from ESP
  read [FC, FE, F, 0] from ram:FFEDC+4
  wrote [FC, FE, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFEE0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [EC, FE, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [EC, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEEC+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFEF4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFEF4+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF24+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF0C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF14+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF44+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF2C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF34+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF64+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF4C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF54+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFF84+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF4C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF54+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF6C+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [D, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [D, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [D, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF74+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF80+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF8C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [7, 0, 0, 0] from ram:FFFA4+4
  wrote [7, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [7, 0, 0, 0] from unique:7980+4
  wrote [7, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [7, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [7, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [7, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF84+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF80+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF4C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF54+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF34+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF34+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF4C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF54+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF6C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF74+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF80+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF8C+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [D, 0, 0, 0] from EAX
  read [8, 0, 0, 0] from ECX
  wrote [15, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [15, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [15, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [15, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to ram:FFF94+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from ram:FFF94+4
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [84, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [84, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [98, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [98, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [98, FF, F, 0] from ESP
  wrote [98, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [98, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF98+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from ram:FFF9C+4
  wrote [BC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFFA0+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B0, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B0, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFFB0+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [AC, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [15, 0, 0, 0] from EAX
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [AC, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to ram:FFFAC+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [C4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C4, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFFC4+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [8, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [8, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [8, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [6, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [6, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [6, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [6, 0, 0, 0] from EAX
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from ESP
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to ram:FFFA4+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFFA0+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [BC, FF, F, 0] from EBP
  wrote [BC, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from unique:9780+4
  wrote [BC, FF, F, 0] to ram:FFF9C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [9C, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF98+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [98, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [98, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [84, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [84, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [84, FF, F, 0] from ESP
  wrote [84, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [84, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF80+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF80+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF90+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFFA4+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFFA4+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFFA4+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFFA4+4
  wrote [6, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [6, 0, 0, 0] from unique:7A00+4
  wrote [4, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from unique:1E080+4
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFFA4+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF84+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF80+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [5, 0, 0, 0] from unique:7A00+4
  wrote [3, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from unique:1E080+4
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF04+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF00+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF04+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF00+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF10+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF0C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF24+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF04+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF00+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [1C, FF, F, 0] from EBP
  wrote [1C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from unique:9780+4
  wrote [1C, FF, F, 0] to ram:FFEFC+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [FC, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFEF8+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [F8, FE, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [F8, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [E4, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [E4, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [E4, FE, F, 0] from ESP
  wrote [E4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [E4, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [E0, FE, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFEE0+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FE, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFEE0+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FE, F, 0] from ESP
  wrote [E4, FE, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F0, FE, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FE, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFEF0+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [4, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF04+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFEF4+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [FC, FE, F, 0] from EBP
  wrote [F4, FE, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F4, FE, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFEF4+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FE, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FE, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FE, F, 0] from ESP
  wrote [F8, FE, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FE, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FE, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FE, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FE, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFEF8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FE, F, 0] from ESP
  wrote [FC, FE, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FE, F, 0] from ESP
  read [1C, FF, F, 0] from ram:FFEFC+4
  wrote [1C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FE, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF00+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF0C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF14+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF14+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF44+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF2C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF34+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF64+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF4C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF54+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF84+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [5, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [5, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [5, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF34+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF34+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF4C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF54+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF6C+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [5, 0, 0, 0] from EAX
  read [3, 0, 0, 0] from ECX
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [8, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [8, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [8, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF74+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF80+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [90, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [90, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF90+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [8, 0, 0, 0] from EAX
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to ram:FFF8C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [A4, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [A4, FF, F, 0] from unique:1D00+4
  read [6, 0, 0, 0] from ram:FFFA4+4
  wrote [6, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [6, 0, 0, 0] from unique:7980+4
  wrote [6, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [6, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [6, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [6, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [4, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [4, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [4, 0, 0, 0] from EAX
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from ESP
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to ram:FFF84+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF80+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [9C, FF, F, 0] from EBP
  wrote [9C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from unique:9780+4
  wrote [9C, FF, F, 0] to ram:FFF7C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [7C, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF78+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [78, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [78, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [64, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [64, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [64, FF, F, 0] from ESP
  wrote [64, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [64, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF60+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF60+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF70+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF84+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF84+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF84+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF84+4
  wrote [4, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [4, 0, 0, 0] from unique:7A00+4
  wrote [2, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from unique:1E080+4
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF84+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF64+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF60+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [3, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from unique:1E080+4
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF24+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF20+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF24+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF20+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF30+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF2C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF44+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF24+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF20+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [3C, FF, F, 0] from EBP
  wrote [3C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from unique:9780+4
  wrote [3C, FF, F, 0] to ram:FFF1C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [1C, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF18+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [18, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [18, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [4, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [4, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [4, FF, F, 0] from ESP
  wrote [4, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [4, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [0, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF00+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [0, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF00+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [0, FF, F, 0] from ESP
  wrote [4, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [10, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [10, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF10+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [24, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [24, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF24+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF14+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [1C, FF, F, 0] from EBP
  wrote [14, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [14, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF14+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [4, FF, F, 0] from ESP
  wrote [18, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [18, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [18, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [18, FF, F, 0] from ESP
  wrote [18, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [18, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [18, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF18+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [18, FF, F, 0] from ESP
  wrote [1C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [1C, FF, F, 0] from ESP
  read [3C, FF, F, 0] from ram:FFF1C+4
  wrote [3C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [1C, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF20+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [2C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [2C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF2C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF34+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF34+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF64+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [3, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [3, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [3, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF34+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF34+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF4C+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [2, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [3, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [3, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [3, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF54+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF60+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [70, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [70, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF70+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [3, 0, 0, 0] from EAX
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to ram:FFF6C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [84, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [84, FF, F, 0] from unique:1D00+4
  read [4, 0, 0, 0] from ram:FFF84+4
  wrote [4, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [4, 0, 0, 0] from unique:7980+4
  wrote [4, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [4, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [4, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [4, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from ESP
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF64+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF60+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [7C, FF, F, 0] from EBP
  wrote [7C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from unique:9780+4
  wrote [7C, FF, F, 0] to ram:FFF5C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [5C, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF58+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [58, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [58, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [44, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [44, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [44, FF, F, 0] from ESP
  wrote [44, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [44, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF40+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF40+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF50+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF64+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF64+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF64+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF64+4
  wrote [2, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [2, 0, 0, 0] from unique:7A00+4
  wrote [0, 0, 0, 0] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [1] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from unique:1E080+4
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [0] from SF
  wrote [1] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [1] from unique:8580+1
  branch to 804975F

emulating 0804975F.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 0804975F.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 0804975F.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049762.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049762.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF64+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049762.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049765.01 IntLess - (SUB) EAX,0x1
  IntLess : EAX, const:1+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049765.02 IntSBorrow - (SUB) EAX,0x1
  IntSBorrow : EAX, const:1+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049765.03 IntSub - (SUB) EAX,0x1
  IntSub : EAX, const:1+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to EAX

emulating 08049765.04 IntSLess - (SUB) EAX,0x1
  IntSLess : EAX, const:0+4 -> SF
  read [1, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049765.05 IntEqual - (SUB) EAX,0x1
  IntEqual : EAX, const:0+4 -> ZF
  read [1, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049765.06 IntAnd - (SUB) EAX,0x1
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:D900+4

emulating 08049765.07 PopCount - (SUB) EAX,0x1
  PopCount : unique:D900+4 -> unique:D980+1
  read [1, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049765.08 IntAnd - (SUB) EAX,0x1
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049765.00 IntEqual - (SUB) EAX,0x1
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049768.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049768.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF44+4

emulating 0804976B.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804976B.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049770+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [70, 97, 4, 8] to ram:FFF40+4

emulating 0804976B.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF44+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [FF, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FF, FF, FF, FF] from unique:1E080+4
  wrote [FF, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FF, 0, 0, 0] from unique:D900+4
  wrote [8] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [8] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF34+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF34+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [70, 97, 4, 8] from ram:FFF40+4
  wrote [70, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [70, 97, 4, 8] from EIP
  return to 8049770

emulating 08049770.01 IntAdd - (MOV) EBX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [50, FF, F, 0] to unique:1D00+4

emulating 08049770.02 Load - (MOV) EBX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [50, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from ram:FFF50+4
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049770.00 Copy - (MOV) EBX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EBX
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to EBX

emulating 08049773.01 IntAdd - (MOV) dword ptr [EBP + -0x10],EAX
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049773.02 Copy - (MOV) dword ptr [EBP + -0x10],EAX
  Copy : EAX -> unique:7980+4
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049773.00 Store - (MOV) dword ptr [EBP + -0x10],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to ram:FFF4C+4

emulating 08049776.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [64, FF, F, 0] to unique:1D00+4

emulating 08049776.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [64, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF64+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 08049776.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049779.01 IntLess - (SUB) EAX,0x2
  IntLess : EAX, const:2+4 -> CF
  read [2, 0, 0, 0] from EAX
  wrote [0] to CF

emulating 08049779.02 IntSBorrow - (SUB) EAX,0x2
  IntSBorrow : EAX, const:2+4 -> OF
  read [2, 0, 0, 0] from EAX
  wrote [0] to OF

emulating 08049779.03 IntSub - (SUB) EAX,0x2
  IntSub : EAX, const:2+4 -> EAX
  read [2, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to EAX

emulating 08049779.04 IntSLess - (SUB) EAX,0x2
  IntSLess : EAX, const:0+4 -> SF
  read [0, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049779.05 IntEqual - (SUB) EAX,0x2
  IntEqual : EAX, const:0+4 -> ZF
  read [0, 0, 0, 0] from EAX
  wrote [1] to ZF

emulating 08049779.06 IntAnd - (SUB) EAX,0x2
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 08049779.07 PopCount - (SUB) EAX,0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 08049779.08 IntAnd - (SUB) EAX,0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049779.00 IntEqual - (SUB) EAX,0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804977C.01 Copy - (MOV) dword ptr [ESP],EAX
  Copy : EAX -> unique:7980+4
  read [0, 0, 0, 0] from EAX
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 0804977C.00 Store - (MOV) dword ptr [ESP],EAX
  Store : const:258039EAF20+8, ESP, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from ESP
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to ram:FFF44+4

emulating 0804977F.01 IntSub - (CALL) 0x8049730
  IntSub : ESP, const:4+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 0804977F.02 Store - (CALL) 0x8049730
  Store : const:258039EAF20+8, ESP, const:8049784+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  wrote [84, 97, 4, 8] to ram:FFF40+4

emulating 0804977F.00 Call - (CALL) 0x8049730
  Call : ram:8049730+4 -> !

emulating 08049730.01 Copy - (PUSH) EBP
  Copy : EBP -> unique:9780+4
  read [5C, FF, F, 0] from EBP
  wrote [5C, FF, F, 0] to unique:9780+4

emulating 08049730.02 IntSub - (PUSH) EBP
  IntSub : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049730.00 Store - (PUSH) EBP
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from unique:9780+4
  wrote [5C, FF, F, 0] to ram:FFF3C+4

emulating 08049731.00 Copy - (MOV) EBP,ESP
  Copy : ESP -> EBP
  read [3C, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to EBP

emulating 08049733.01 Copy - (PUSH) EBX
  Copy : EBX -> unique:9780+4
  read [0, F0, E, 8] from EBX
  wrote [0, F0, E, 8] to unique:9780+4

emulating 08049733.02 IntSub - (PUSH) EBX
  IntSub : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049733.00 Store - (PUSH) EBX
  Store : const:258039EAF20+8, ESP, unique:9780+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from unique:9780+4
  wrote [0, F0, E, 8] to ram:FFF38+4

emulating 08049734.01 IntLess - (SUB) ESP,0x14
  IntLess : ESP, const:14+4 -> CF
  read [38, FF, F, 0] from ESP
  wrote [0] to CF

emulating 08049734.02 IntSBorrow - (SUB) ESP,0x14
  IntSBorrow : ESP, const:14+4 -> OF
  read [38, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049734.03 IntSub - (SUB) ESP,0x14
  IntSub : ESP, const:14+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 08049734.04 IntSLess - (SUB) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [24, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049734.05 IntEqual - (SUB) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [24, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049734.06 IntAnd - (SUB) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [24, FF, F, 0] from ESP
  wrote [24, 0, 0, 0] to unique:D900+4

emulating 08049734.07 PopCount - (SUB) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [24, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049734.08 IntAnd - (SUB) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049734.00 IntEqual - (SUB) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049737.01 IntSub - (CALL) 0x804973c
  IntSub : ESP, const:4+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [20, FF, F, 0] to ESP

emulating 08049737.02 Store - (CALL) 0x804973c
  Store : const:258039EAF20+8, ESP, const:804973C+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  wrote [3C, 97, 4, 8] to ram:FFF20+4

emulating 08049737.00 Branch - (CALL) 0x804973c
  Branch : ram:804973C+4 -> !
  branch to 804973C

emulating 0804973C.01 Load - (POP) EAX
  Load : const:258039EAF20+8, ESP -> EAX
  resolved const:258039EAF20+8 to the "ram" space
  read [20, FF, F, 0] from ESP
  read [3C, 97, 4, 8] from ram:FFF20+4
  wrote [3C, 97, 4, 8] to EAX

emulating 0804973C.00 IntAdd - (POP) EAX
  IntAdd : ESP, const:4+4 -> ESP
  read [20, FF, F, 0] from ESP
  wrote [24, FF, F, 0] to ESP

emulating 0804973D.01 IntCarry - (ADD) EAX,0xa58c4
  IntCarry : EAX, const:A58C4+4 -> CF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to CF

emulating 0804973D.02 IntSCarry - (ADD) EAX,0xa58c4
  IntSCarry : EAX, const:A58C4+4 -> OF
  read [3C, 97, 4, 8] from EAX
  wrote [1] to OF

emulating 0804973D.03 IntAdd - (ADD) EAX,0xa58c4
  IntAdd : EAX, const:A58C4+4 -> EAX
  read [3C, 97, 4, 8] from EAX
  wrote [0, F0, E, 8] to EAX

emulating 0804973D.04 IntSLess - (ADD) EAX,0xa58c4
  IntSLess : EAX, const:0+4 -> SF
  read [0, F0, E, 8] from EAX
  wrote [0] to SF

emulating 0804973D.05 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : EAX, const:0+4 -> ZF
  read [0, F0, E, 8] from EAX
  wrote [0] to ZF

emulating 0804973D.06 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [0, F0, E, 8] from EAX
  wrote [0, 0, 0, 0] to unique:D900+4

emulating 0804973D.07 PopCount - (ADD) EAX,0xa58c4
  PopCount : unique:D900+4 -> unique:D980+1
  read [0, 0, 0, 0] from unique:D900+4
  wrote [0] to unique:D980+1

emulating 0804973D.08 IntAnd - (ADD) EAX,0xa58c4
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [0] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 0804973D.00 IntEqual - (ADD) EAX,0xa58c4
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049743.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [30, FF, F, 0] to unique:1D00+4

emulating 08049743.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [0, F0, E, 8] from EAX
  wrote [0, F0, E, 8] to unique:7980+4

emulating 08049743.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [30, FF, F, 0] from unique:1D00+4
  read [0, F0, E, 8] from unique:7980+4
  wrote [0, F0, E, 8] to ram:FFF30+4

emulating 08049746.01 IntAdd - (MOV) EAX,dword ptr [EBP + 0x8]
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049746.02 Load - (MOV) EAX,dword ptr [EBP + 0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF44+4
  wrote [0, 0, 0, 0] to unique:7980+4

emulating 08049746.00 Copy - (MOV) EAX,dword ptr [EBP + 0x8]
  Copy : unique:7980+4 -> EAX
  read [0, 0, 0, 0] from unique:7980+4
  wrote [0, 0, 0, 0] to EAX

emulating 08049749.01 IntAdd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAdd : EBP, const:8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [44, FF, F, 0] to unique:1D00+4

emulating 08049749.02 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF44+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.03 IntLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntLess : unique:7A00+4, const:2+4 -> CF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [1] to CF

emulating 08049749.04 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF44+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.05 IntSBorrow - (CMP) dword ptr [EBP + 0x8],0x2
  IntSBorrow : unique:7A00+4, const:2+4 -> OF
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [0] to OF

emulating 08049749.06 Load - (CMP) dword ptr [EBP + 0x8],0x2
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7A00+4
  resolved const:258039EAF20+8 to the "ram" space
  read [44, FF, F, 0] from unique:1D00+4
  read [0, 0, 0, 0] from ram:FFF44+4
  wrote [0, 0, 0, 0] to unique:7A00+4

emulating 08049749.07 IntSub - (CMP) dword ptr [EBP + 0x8],0x2
  IntSub : unique:7A00+4, const:2+4 -> unique:1E080+4
  read [0, 0, 0, 0] from unique:7A00+4
  wrote [FE, FF, FF, FF] to unique:1E080+4

emulating 08049749.08 IntSLess - (CMP) dword ptr [EBP + 0x8],0x2
  IntSLess : unique:1E080+4, const:0+4 -> SF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [1] to SF

emulating 08049749.09 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:1E080+4, const:0+4 -> ZF
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [0] to ZF

emulating 08049749.0A IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:1E080+4, const:FF+4 -> unique:D900+4
  read [FE, FF, FF, FF] from unique:1E080+4
  wrote [FE, 0, 0, 0] to unique:D900+4

emulating 08049749.0B PopCount - (CMP) dword ptr [EBP + 0x8],0x2
  PopCount : unique:D900+4 -> unique:D980+1
  read [FE, 0, 0, 0] from unique:D900+4
  wrote [7] to unique:D980+1

emulating 08049749.0C IntAnd - (CMP) dword ptr [EBP + 0x8],0x2
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [7] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049749.00 IntEqual - (CMP) dword ptr [EBP + 0x8],0x2
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804974D.01 IntEqual - (JGE) 0x804975f
  IntEqual : OF, SF -> unique:8580+1
  read [0] from OF
  read [1] from SF
  wrote [0] to unique:8580+1

emulating 0804974D.00 CBranch - (JGE) 0x804975f
  CBranch : ram:804975F+4, unique:8580+1 -> !
  read [0] from unique:8580+1
  fall through

emulating 08049753.01 IntAdd - (MOV) dword ptr [EBP + -0x8],0x1
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 08049753.02 Copy - (MOV) dword ptr [EBP + -0x8],0x1
  Copy : const:1+4 -> unique:7A00+4
  wrote [1, 0, 0, 0] to unique:7A00+4

emulating 08049753.00 Store - (MOV) dword ptr [EBP + -0x8],0x1
  Store : const:258039EAF20+8, unique:1D00+4, unique:7A00+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from unique:7A00+4
  wrote [1, 0, 0, 0] to ram:FFF34+4

emulating 0804975A.00 Branch - (JMP) 0x804978e
  Branch : ram:804978E+4 -> !
  branch to 804978E

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [3C, FF, F, 0] from EBP
  wrote [34, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [34, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF34+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [24, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [24, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [24, FF, F, 0] from ESP
  wrote [38, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [38, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [38, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [38, FF, F, 0] from ESP
  wrote [38, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [38, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [38, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF38+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [38, FF, F, 0] from ESP
  wrote [3C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [3C, FF, F, 0] from ESP
  read [5C, FF, F, 0] from ram:FFF3C+4
  wrote [5C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [3C, FF, F, 0] from ESP
  wrote [40, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [40, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF40+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [40, FF, F, 0] from ESP
  wrote [44, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [1, 0, 0, 0] from EAX
  wrote [1, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [4C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [4C, FF, F, 0] from unique:1D00+4
  read [1, 0, 0, 0] from ram:FFF4C+4
  wrote [1, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [1, 0, 0, 0] from unique:7980+4
  wrote [1, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [1, 0, 0, 0] from EAX
  read [1, 0, 0, 0] from ECX
  wrote [2, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [2, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [2, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [2, 0, 0, 0] from unique:D900+4
  wrote [1] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [1] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to ram:FFF54+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [5C, FF, F, 0] from EBP
  wrote [54, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [54, FF, F, 0] from unique:1D00+4
  read [2, 0, 0, 0] from ram:FFF54+4
  wrote [2, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [2, 0, 0, 0] from unique:7980+4
  wrote [2, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [44, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [44, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [44, FF, F, 0] from ESP
  wrote [58, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [58, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [58, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [58, FF, F, 0] from ESP
  wrote [58, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [58, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [58, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF58+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [58, FF, F, 0] from ESP
  wrote [5C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [5C, FF, F, 0] from ESP
  read [7C, FF, F, 0] from ram:FFF5C+4
  wrote [7C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [5C, FF, F, 0] from ESP
  wrote [60, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [60, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF60+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [60, FF, F, 0] from ESP
  wrote [64, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [2, 0, 0, 0] from EAX
  wrote [2, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [6C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [6C, FF, F, 0] from unique:1D00+4
  read [3, 0, 0, 0] from ram:FFF6C+4
  wrote [3, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [3, 0, 0, 0] from unique:7980+4
  wrote [3, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [3, 0, 0, 0] from EAX
  read [2, 0, 0, 0] from ECX
  wrote [5, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [5, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [5, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [5, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to ram:FFF74+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [7C, FF, F, 0] from EBP
  wrote [74, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [74, FF, F, 0] from unique:1D00+4
  read [5, 0, 0, 0] from ram:FFF74+4
  wrote [5, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [5, 0, 0, 0] from unique:7980+4
  wrote [5, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [64, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [64, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [64, FF, F, 0] from ESP
  wrote [78, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [78, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [78, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [78, FF, F, 0] from ESP
  wrote [78, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [78, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [78, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF78+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [78, FF, F, 0] from ESP
  wrote [7C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [7C, FF, F, 0] from ESP
  read [9C, FF, F, 0] from ram:FFF7C+4
  wrote [9C, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [7C, FF, F, 0] from ESP
  wrote [80, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [80, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFF80+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [80, FF, F, 0] from ESP
  wrote [84, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [5, 0, 0, 0] from EAX
  wrote [5, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [8C, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [8C, FF, F, 0] from unique:1D00+4
  read [8, 0, 0, 0] from ram:FFF8C+4
  wrote [8, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [8, 0, 0, 0] from unique:7980+4
  wrote [8, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [0] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [8, 0, 0, 0] from EAX
  read [5, 0, 0, 0] from ECX
  wrote [D, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [D, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [D, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [D, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to ram:FFF94+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [9C, FF, F, 0] from EBP
  wrote [94, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [94, FF, F, 0] from unique:1D00+4
  read [D, 0, 0, 0] from ram:FFF94+4
  wrote [D, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [D, 0, 0, 0] from unique:7980+4
  wrote [D, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [84, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [84, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [84, FF, F, 0] from ESP
  wrote [98, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [98, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [98, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [98, FF, F, 0] from ESP
  wrote [98, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [98, 0, 0, 0] from unique:D900+4
  wrote [3] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [3] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [98, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFF98+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [98, FF, F, 0] from ESP
  wrote [9C, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [9C, FF, F, 0] from ESP
  read [BC, FF, F, 0] from ram:FFF9C+4
  wrote [BC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [9C, FF, F, 0] from ESP
  wrote [A0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [A0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFFA0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [A0, FF, F, 0] from ESP
  wrote [A4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [D, 0, 0, 0] from EAX
  wrote [D, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [AC, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [AC, FF, F, 0] from unique:1D00+4
  read [15, 0, 0, 0] from ram:FFFAC+4
  wrote [15, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [15, 0, 0, 0] from unique:7980+4
  wrote [15, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [15, 0, 0, 0] from EAX
  read [D, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [15, 0, 0, 0] from EAX
  read [D, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [15, 0, 0, 0] from EAX
  read [D, 0, 0, 0] from ECX
  wrote [22, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [22, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [22, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [22, 0, 0, 0] from EAX
  wrote [22, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [22, 0, 0, 0] from unique:D900+4
  wrote [2] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [2] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B4, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [22, 0, 0, 0] from EAX
  wrote [22, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FF, F, 0] from unique:1D00+4
  read [22, 0, 0, 0] from unique:7980+4
  wrote [22, 0, 0, 0] to ram:FFFB4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [BC, FF, F, 0] from EBP
  wrote [B4, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [B4, FF, F, 0] from unique:1D00+4
  read [22, 0, 0, 0] from ram:FFFB4+4
  wrote [22, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [22, 0, 0, 0] from unique:7980+4
  wrote [22, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [A4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [A4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [A4, FF, F, 0] from ESP
  wrote [B8, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [B8, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [B8, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [B8, FF, F, 0] from ESP
  wrote [B8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [B8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [B8, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFFB8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [B8, FF, F, 0] from ESP
  wrote [BC, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [BC, FF, F, 0] from ESP
  read [DC, FF, F, 0] from ram:FFFBC+4
  wrote [DC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [BC, FF, F, 0] from ESP
  wrote [C0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [C0, FF, F, 0] from ESP
  read [84, 97, 4, 8] from ram:FFFC0+4
  wrote [84, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [C0, FF, F, 0] from ESP
  wrote [C4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [84, 97, 4, 8] from EIP
  return to 8049784

emulating 08049784.00 Copy - (MOV) ECX,EAX
  Copy : EAX -> ECX
  read [22, 0, 0, 0] from EAX
  wrote [22, 0, 0, 0] to ECX

emulating 08049786.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x10]
  IntAdd : EBP, const:FFFFFFF0+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [CC, FF, F, 0] to unique:1D00+4

emulating 08049786.02 Load - (MOV) EAX,dword ptr [EBP + -0x10]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [CC, FF, F, 0] from unique:1D00+4
  read [37, 0, 0, 0] from ram:FFFCC+4
  wrote [37, 0, 0, 0] to unique:7980+4

emulating 08049786.00 Copy - (MOV) EAX,dword ptr [EBP + -0x10]
  Copy : unique:7980+4 -> EAX
  read [37, 0, 0, 0] from unique:7980+4
  wrote [37, 0, 0, 0] to EAX

emulating 08049789.01 IntCarry - (ADD) EAX,ECX
  IntCarry : EAX, ECX -> CF
  read [37, 0, 0, 0] from EAX
  read [22, 0, 0, 0] from ECX
  wrote [1] to CF

emulating 08049789.02 IntSCarry - (ADD) EAX,ECX
  IntSCarry : EAX, ECX -> OF
  read [37, 0, 0, 0] from EAX
  read [22, 0, 0, 0] from ECX
  wrote [1] to OF

emulating 08049789.03 IntAdd - (ADD) EAX,ECX
  IntAdd : EAX, ECX -> EAX
  read [37, 0, 0, 0] from EAX
  read [22, 0, 0, 0] from ECX
  wrote [59, 0, 0, 0] to EAX

emulating 08049789.04 IntSLess - (ADD) EAX,ECX
  IntSLess : EAX, const:0+4 -> SF
  read [59, 0, 0, 0] from EAX
  wrote [0] to SF

emulating 08049789.05 IntEqual - (ADD) EAX,ECX
  IntEqual : EAX, const:0+4 -> ZF
  read [59, 0, 0, 0] from EAX
  wrote [0] to ZF

emulating 08049789.06 IntAnd - (ADD) EAX,ECX
  IntAnd : EAX, const:FF+4 -> unique:D900+4
  read [59, 0, 0, 0] from EAX
  wrote [59, 0, 0, 0] to unique:D900+4

emulating 08049789.07 PopCount - (ADD) EAX,ECX
  PopCount : unique:D900+4 -> unique:D980+1
  read [59, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049789.08 IntAnd - (ADD) EAX,ECX
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049789.00 IntEqual - (ADD) EAX,ECX
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 0804978B.01 IntAdd - (MOV) dword ptr [EBP + -0x8],EAX
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [D4, FF, F, 0] to unique:1D00+4

emulating 0804978B.02 Copy - (MOV) dword ptr [EBP + -0x8],EAX
  Copy : EAX -> unique:7980+4
  read [59, 0, 0, 0] from EAX
  wrote [59, 0, 0, 0] to unique:7980+4

emulating 0804978B.00 Store - (MOV) dword ptr [EBP + -0x8],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FF, F, 0] from unique:1D00+4
  read [59, 0, 0, 0] from unique:7980+4
  wrote [59, 0, 0, 0] to ram:FFFD4+4

emulating 0804978E.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0x8]
  IntAdd : EBP, const:FFFFFFF8+4 -> unique:1D00+4
  read [DC, FF, F, 0] from EBP
  wrote [D4, FF, F, 0] to unique:1D00+4

emulating 0804978E.02 Load - (MOV) EAX,dword ptr [EBP + -0x8]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [D4, FF, F, 0] from unique:1D00+4
  read [59, 0, 0, 0] from ram:FFFD4+4
  wrote [59, 0, 0, 0] to unique:7980+4

emulating 0804978E.00 Copy - (MOV) EAX,dword ptr [EBP + -0x8]
  Copy : unique:7980+4 -> EAX
  read [59, 0, 0, 0] from unique:7980+4
  wrote [59, 0, 0, 0] to EAX

emulating 08049791.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [C4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 08049791.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [C4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 08049791.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [C4, FF, F, 0] from ESP
  wrote [D8, FF, F, 0] to ESP

emulating 08049791.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [D8, FF, F, 0] from ESP
  wrote [0] to SF

emulating 08049791.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [D8, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 08049791.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [D8, FF, F, 0] from ESP
  wrote [D8, 0, 0, 0] to unique:D900+4

emulating 08049791.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [D8, 0, 0, 0] from unique:D900+4
  wrote [4] to unique:D980+1

emulating 08049791.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [4] from unique:D980+1
  wrote [0] to unique:DA00+1

emulating 08049791.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [0] from unique:DA00+1
  wrote [1] to PF

emulating 08049794.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [D8, FF, F, 0] from ESP
  read [0, F0, E, 8] from ram:FFFD8+4
  wrote [0, F0, E, 8] to EBX

emulating 08049794.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [D8, FF, F, 0] from ESP
  wrote [DC, FF, F, 0] to ESP

emulating 08049795.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [DC, FF, F, 0] from ESP
  read [FC, FF, F, 0] from ram:FFFDC+4
  wrote [FC, FF, F, 0] to EBP

emulating 08049795.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [DC, FF, F, 0] from ESP
  wrote [E0, FF, F, 0] to ESP

emulating 08049796.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [E0, FF, F, 0] from ESP
  read [C6, 97, 4, 8] from ram:FFFE0+4
  wrote [C6, 97, 4, 8] to EIP

emulating 08049796.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [E0, FF, F, 0] from ESP
  wrote [E4, FF, F, 0] to ESP

emulating 08049796.00 Return - (RET) 
  Return : EIP -> !
  read [C6, 97, 4, 8] from EIP
  return to 80497C6

emulating 080497C6.01 IntAdd - (MOV) dword ptr [EBP + -0xc],EAX
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FF, F, 0] from EBP
  wrote [F0, FF, F, 0] to unique:1D00+4

emulating 080497C6.02 Copy - (MOV) dword ptr [EBP + -0xc],EAX
  Copy : EAX -> unique:7980+4
  read [59, 0, 0, 0] from EAX
  wrote [59, 0, 0, 0] to unique:7980+4

emulating 080497C6.00 Store - (MOV) dword ptr [EBP + -0xc],EAX
  Store : const:258039EAF20+8, unique:1D00+4, unique:7980+4 -> !
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FF, F, 0] from unique:1D00+4
  read [59, 0, 0, 0] from unique:7980+4
  wrote [59, 0, 0, 0] to ram:FFFF0+4

emulating 080497C9.01 IntAdd - (MOV) EAX,dword ptr [EBP + -0xc]
  IntAdd : EBP, const:FFFFFFF4+4 -> unique:1D00+4
  read [FC, FF, F, 0] from EBP
  wrote [F0, FF, F, 0] to unique:1D00+4

emulating 080497C9.02 Load - (MOV) EAX,dword ptr [EBP + -0xc]
  Load : const:258039EAF20+8, unique:1D00+4 -> unique:7980+4
  resolved const:258039EAF20+8 to the "ram" space
  read [F0, FF, F, 0] from unique:1D00+4
  read [59, 0, 0, 0] from ram:FFFF0+4
  wrote [59, 0, 0, 0] to unique:7980+4

emulating 080497C9.00 Copy - (MOV) EAX,dword ptr [EBP + -0xc]
  Copy : unique:7980+4 -> EAX
  read [59, 0, 0, 0] from unique:7980+4
  wrote [59, 0, 0, 0] to EAX

emulating 080497CC.01 IntCarry - (ADD) ESP,0x14
  IntCarry : ESP, const:14+4 -> CF
  read [E4, FF, F, 0] from ESP
  wrote [1] to CF

emulating 080497CC.02 IntSCarry - (ADD) ESP,0x14
  IntSCarry : ESP, const:14+4 -> OF
  read [E4, FF, F, 0] from ESP
  wrote [1] to OF

emulating 080497CC.03 IntAdd - (ADD) ESP,0x14
  IntAdd : ESP, const:14+4 -> ESP
  read [E4, FF, F, 0] from ESP
  wrote [F8, FF, F, 0] to ESP

emulating 080497CC.04 IntSLess - (ADD) ESP,0x14
  IntSLess : ESP, const:0+4 -> SF
  read [F8, FF, F, 0] from ESP
  wrote [0] to SF

emulating 080497CC.05 IntEqual - (ADD) ESP,0x14
  IntEqual : ESP, const:0+4 -> ZF
  read [F8, FF, F, 0] from ESP
  wrote [0] to ZF

emulating 080497CC.06 IntAnd - (ADD) ESP,0x14
  IntAnd : ESP, const:FF+4 -> unique:D900+4
  read [F8, FF, F, 0] from ESP
  wrote [F8, 0, 0, 0] to unique:D900+4

emulating 080497CC.07 PopCount - (ADD) ESP,0x14
  PopCount : unique:D900+4 -> unique:D980+1
  read [F8, 0, 0, 0] from unique:D900+4
  wrote [5] to unique:D980+1

emulating 080497CC.08 IntAnd - (ADD) ESP,0x14
  IntAnd : unique:D980+1, const:1+1 -> unique:DA00+1
  read [5] from unique:D980+1
  wrote [1] to unique:DA00+1

emulating 080497CC.00 IntEqual - (ADD) ESP,0x14
  IntEqual : unique:DA00+1, const:0+1 -> PF
  read [1] from unique:DA00+1
  wrote [0] to PF

emulating 080497CF.01 Load - (POP) EBX
  Load : const:258039EAF20+8, ESP -> EBX
  resolved const:258039EAF20+8 to the "ram" space
  read [F8, FF, F, 0] from ESP
  read [0, 0, 0, 0] from ram:FFFF8+4
  wrote [0, 0, 0, 0] to EBX

emulating 080497CF.00 IntAdd - (POP) EBX
  IntAdd : ESP, const:4+4 -> ESP
  read [F8, FF, F, 0] from ESP
  wrote [FC, FF, F, 0] to ESP

emulating 080497D0.01 Load - (POP) EBP
  Load : const:258039EAF20+8, ESP -> EBP
  resolved const:258039EAF20+8 to the "ram" space
  read [FC, FF, F, 0] from ESP
  read [0, 0, 0, 0] from ram:FFFFC+4
  wrote [0, 0, 0, 0] to EBP

emulating 080497D0.00 IntAdd - (POP) EBP
  IntAdd : ESP, const:4+4 -> ESP
  read [FC, FF, F, 0] from ESP
  wrote [0, 0, 10, 0] to ESP

emulating 080497D1.01 Load - (RET) 
  Load : const:258039EAF20+8, ESP -> EIP
  resolved const:258039EAF20+8 to the "ram" space
  read [0, 0, 10, 0] from ESP
  read [0, 0, 0, 0] from ram:100000+4
  wrote [0, 0, 0, 0] to EIP

emulating 080497D1.02 IntAdd - (RET) 
  IntAdd : ESP, const:4+4 -> ESP
  read [0, 0, 10, 0] from ESP
  wrote [4, 0, 10, 0] to ESP

emulating 080497D1.03 Return - (RET) 
  Return : EIP -> !
  read [0, 0, 0, 0] from EIP
  return to 0

-=- Done -=-
  read [59, 0, 0, 0] from EAX
$eax = 89
